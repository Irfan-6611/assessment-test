//
//  HomePageViewController.swift
//  AssessmentTest
//
//  Created by Irfan Ahmed on 07/03/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomePageDisplayLogic: class
{
  func displayGoldenScent(viewModel: HomePage.FetchGoldenScent.ViewModel)
}

class HomePageViewController: UIViewController, HomePageDisplayLogic
{
    // MARK: IBOutlets

  @IBOutlet weak var tableView: UITableView!
    
  var interactor: HomePageBusinessLogic?
  var router: (NSObjectProtocol & HomePageRoutingLogic & HomePageDataPassing)?
    var displayedGoldenScent: [HomePage.DisplayedGoldenScent] = []
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
    
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    fetchGoldenScenet()
    tableViewConfiguration()
  }
  
  // MARK: Fetch Golden Scent
    
  func fetchGoldenScenet()
  {
    let request = HomePage.FetchGoldenScent.Request()
    interactor?.fetchGoldenScent(request: request)
  }
  
  func displayGoldenScent(viewModel: HomePage.FetchGoldenScent.ViewModel)
  {
    displayedGoldenScent = viewModel.displayedRows
    DispatchQueue.main.async {
        self.tableView.reloadData()
    }
  }
}

//MARK:- TableView Delegate and Datasource

extension HomePageViewController: UITableViewDelegate, UITableViewDataSource{
    
    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        guard let cell = cell as? GoldenScentTableViewCell else { return }
        cell.containerViewLeftPadding.constant = displayedGoldenScent[indexPath.row].goldenScents[indexPath.row].rowLeftPadding ?? 0
        cell.containerViewRightPadding.constant = displayedGoldenScent[indexPath.row].goldenScents[indexPath.row].rowRightPadding ?? 0
        cell.containerViewBottomPadding.constant = displayedGoldenScent[indexPath.row].goldenScents[indexPath.row].rowBottomPadding ?? 0

    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayedGoldenScent.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: GoldenScentTableViewCell.identifier, for: indexPath) as! GoldenScentTableViewCell
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if let rowHeight = displayedGoldenScent[indexPath.row].goldenScents[indexPath.row].height{
            return rowHeight == 0 ? 330 : 330
        }
        return 330
    }
    
    
}

//MARK:- Private Extensions

private extension HomePageViewController{
    
    // MARK: Setup
    
    private func setup()
    {
      let viewController = self
      let interactor = HomePageInteractor()
      let presenter = HomePagePresenter()
      let router = HomePageRouter()
      viewController.interactor = interactor
      viewController.router = router
      interactor.presenter = presenter
      presenter.viewController = viewController
      router.viewController = viewController
      router.dataStore = interactor
    }
    
    private func tableViewConfiguration(){
        tableView.register(GoldenScentTableViewCell.nib, forCellReuseIdentifier: GoldenScentTableViewCell.identifier)
        tableView.delegate = self
        tableView.dataSource = self
    }

}
