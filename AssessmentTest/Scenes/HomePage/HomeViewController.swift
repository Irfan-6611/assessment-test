//
//  HomeViewController.swift
//  AssessmentTest
//
//  Created by Irfan Ahmed on 07/03/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: class
{
  func displayGoldenScent(viewModel: Home.FetchGoldenScent.ViewModel)
}

class HomeViewController: UIViewController, HomeDisplayLogic
{
  var interactor: HomeBusinessLogic?
  var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
    
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    fetchGoldenScenet()
  }
  
  // MARK: Fetch Golden Scent
    
  func fetchGoldenScenet()
  {
    let request = Home.FetchGoldenScent.Request()
    interactor?.fetchGoldenScent(request: request)
  }
  
  func displayGoldenScent(viewModel: Home.FetchGoldenScent.ViewModel)
  {
    print(viewModel.displayedRows.count)
  }
}

//MARK:- Private Extensions

private extension HomeViewController{
    
    // MARK: Setup
    
    private func setup()
    {
      let viewController = self
      let interactor = HomeInteractor()
      let presenter = HomePresenter()
      let router = HomeRouter()
      viewController.interactor = interactor
      viewController.router = router
      interactor.presenter = presenter
      presenter.viewController = viewController
      router.viewController = viewController
      router.dataStore = interactor
    }

}
